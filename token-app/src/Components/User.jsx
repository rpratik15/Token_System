import React, { useState } from 'react'
import '../Style/user.css'
import UserToken from './UserToken'
import Button from 'react-bootstrap/Button';
import axios from 'axios';



function User() {

  const initialValue = {
    date: '',
    machine_name: '',
    customer_name: '',
    problem: '',
    created_by: '',
    desc: '',
    image: '',
    status: 'Pending'
  }
  const [tokenData, setTokenData] = useState(initialValue);

  const resetData = () => {
    console.log("Resetting data");
    setTokenData(initialValue);
  }
  const sendDataToDb =async (e) => {
    console.log("Sending data to DB");
    e.preventDefault();

    setTokenData({
      date: e.target.date.value,
      machine_name: e.target.machine_name.value,
      customer_name: e.target.customer_name.value,
      problem: e.target.problem.value,
      created_by: e.target.created_by.value,
      desc: e.target.desc.value,
      image: e.target.image.files[0] ? URL.createObjectURL(e.target.image.files[0]) : '',
      status: 'Pending'
    })

    const formData=new FormData();
    formData.append('date', e.target.date.value);
    formData.append('machine_name', e.target.machine_name.value);
    formData.append('customer_name', e.target.customer_name.value);
    formData.append('problem', e.target.problem.value);
    formData.append('created_by', e.target.created_by.value);
    formData.append('desc', e.target.desc.value);
    if (e.target.image.files[0]) {
      formData.append('singleImage', e.target.image.files[0]);
    }
    formData.append('status', 'Pending');
   


        const result = await axios.post(
      "http://localhost:3000/token/add",
      formData
      // ,
      // {
      //   headers: { "Content-Type": "multipart/form-data" },
      // }
    );

    console.log(result.status);
    if (result.status === 200 || result.status === 201) {
      console.log("Data sent successfully");
      
    } else {
      console.error("Error sending data");
    }
  }

  const handleChange = (e) => {
    const { name, value } = e.target;
    setTokenData((prevData) => ({
      ...prevData,
      [name]: value
    }));
  }



  return (
    <div className='user'>
      <h1>User Form</h1>
      <Button variant="primary" id="logout">Logout</Button>
      <form action="" className="user-form" onSubmit={sendDataToDb}>
        <div id="group">
          <div id="grp1">
            <label htmlFor="date">Date:</label>
            <input type="date" id="date" name="date" value={tokenData.date} onChange={handleChange} required />
            <br />
            <label htmlFor="machine_name">Machine Name:</label>
            <input type="text" id="machine_name" name="machine_name" value={tokenData.machine_name} onChange={handleChange} required />
            <br />
            <label htmlFor="customer_name">Customer Name:</label>
            <input type="text" id="customer_name" name="customer_name" value={tokenData.customer_name} onChange={handleChange} required />
            <br />
            <label htmlFor="problem">Problem Reported By:</label>
            <input type="text" id="problem" name="problem" value={tokenData.problem} onChange={handleChange} required />
            <br />
          </div>
          <div id="grp2">
            <label htmlFor="created_by">Token Generated By:</label>
            <input type="text" id="created_by" name="created_by" value={tokenData.created_by} onChange={handleChange} required />
            <br />
            <label htmlFor="desc">Problem Description:</label>
            <textarea id="desc" name="desc" value={tokenData.desc} onChange={handleChange} ></textarea>
            <br />
            <label htmlFor="image">Upload Image:</label>
            <input type="file" id="image" name="image" value={tokenData.img} onChange={handleChange} />
            <br />
          </div>
        </div>

        <div className="user-btn">
          <Button variant="success" type='submit'>Submit</Button>
          <Button variant="success" type='reset' onClick={resetData}>Reset</Button>
          {/* <button type='submit'>Submit</button>
            <button type='reset'>Reset</button> */}
        </div>
      </form>
      <hr className="divider" />
      <h2>Token Information</h2>
      <div className="token-info">

        <UserToken date="2023-02-01" machine_name="Mark II" customer_name="Balaji India Pvt Ltd, Delhi" problem="Rajeev Rana" created_by="Sanjay Ramawat" desc="WP can not exceed above 15, chiller also not working" status="Pending" image="https://images.unsplash.com/photo-1471890701797-59336a877de4?q=80&w=1465&auto=format&fit=crop&ixlib=rb-4.1.0&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D" />
        <UserToken date="2024-05-01" machine_name="Mark I" customer_name="Arrya tools, Mumbai" problem="Dhiraaj Rai" created_by="Prince" desc="Insatlled new software but always ask for password" status="Pending" image="https://images.unsplash.com/photo-1471890701797-59336a877de4?q=80&w=1465&auto=format&fit=crop&ixlib=rb-4.1.0&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D" />

        <UserToken date="2025-11-01" machine_name="Enova" customer_name="India tools Pvt Ltd, Pune" problem="Ajaykant" created_by="Sanjay Ramawat" desc="chiller also not working" status="Pending" image="https://images.unsplash.com/photo-1471890701797-59336a877de4?q=80&w=1465&auto=format&fit=crop&ixlib=rb-4.1.0&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D" />

        <UserToken date="2025-12-01" machine_name="Emerge S43" customer_name="Jiya tools, Delhi" problem="Rajeev Rana" created_by="Sanjay Ramawat" desc="Need new password" status="Pending" image="https://images.unsplash.com/photo-1471890701797-59336a877de4?q=80&w=1465&auto=format&fit=crop&ixlib=rb-4.1.0&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D" />

      </div>
    </div>
  )
}

export default User